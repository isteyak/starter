<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:AirCloudWPF">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/AirCloudWPF;component/Styles/Brushes.xaml" />
        <ResourceDictionary Source="pack://application:,,,/AirCloudWPF;component/Styles/PathFigures.xaml" />
        <ResourceDictionary Source="pack://application:,,,/AirCloudWPF;component/Styles/FallbackSizes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <Style x:Key="TextButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="local:ButtonExtensions.ButtonSize" Value="Large" />
        <Setter Property="local:ButtonExtensions.IconPosition" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="ButtonBorder"
                        Margin="4,4,4,4"
                        Padding="8,8,8,8"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Background="{StaticResource ACGrayBrush6}"
                        BorderBrush="Transparent"
                        BorderThickness="2">
                        <Grid
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="LeftColumn" Width="*" />
                                <ColumnDefinition x:Name="RightColumn" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                x:Name="ButtonText"
                                Grid.Column="0"
                                Grid.ColumnSpan="1"
                                Margin="0,0,0,0"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                FontSize="12"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource ACPrimaryGraphiteBrush}"
                                Text="{TemplateBinding Content}" />
                            <Path
                                x:Name="Icon"
                                Grid.Column="1"
                                Grid.ColumnSpan="1"
                                Width="15"
                                Height="15"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:ButtonExtensions.Icon)}"
                                Fill="{StaticResource ACPrimaryGraphiteBrush}"
                                Stretch="Uniform" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="local:ButtonExtensions.IconPosition" Value="Right">
                            <Setter TargetName="Icon" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ButtonText" Property="Grid.Column" Value="0" />
                            <Setter TargetName="LeftColumn" Property="Width" Value="*" />
                            <Setter TargetName="RightColumn" Property="Width" Value="Auto" />
                            <Setter TargetName="ButtonText" Property="Margin" Value="0,0,8,0" />
                        </Trigger>

                        <Trigger Property="local:ButtonExtensions.IconPosition" Value="Left">
                            <Setter TargetName="Icon" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ButtonText" Property="Grid.Column" Value="1" />
                            <Setter TargetName="LeftColumn" Property="Width" Value="Auto" />
                            <Setter TargetName="RightColumn" Property="Width" Value="*" />
                            <Setter TargetName="ButtonText" Property="Margin" Value="8,0,0,0" />
                        </Trigger>

                        <Trigger Property="local:ButtonExtensions.Icon" Value="{x:Null}">
                            <Setter TargetName="ButtonText" Property="Margin" Value="0" />
                            <Setter TargetName="ButtonText" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ButtonText" Property="Grid.ColumnSpan" Value="2" />
                        </Trigger>

                        <Trigger Property="local:ButtonExtensions.Icon" Value="">
                            <Setter TargetName="ButtonText" Property="Margin" Value="0" />
                            <Setter TargetName="ButtonText" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ButtonText" Property="Grid.ColumnSpan" Value="2" />
                        </Trigger>

                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="ButtonText" Property="Margin" Value="0" />
                            <Setter TargetName="Icon" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Icon" Property="Grid.ColumnSpan" Value="2" />
                        </Trigger>

                        <Trigger Property="Content" Value="">
                            <Setter TargetName="ButtonText" Property="Margin" Value="0" />
                            <Setter TargetName="Icon" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Icon" Property="Grid.ColumnSpan" Value="2" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonText" Property="Foreground" Value="{StaticResource ACPrimaryRedBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource ACGrayBrush5}" />
                            <Setter TargetName="ButtonText" Property="Foreground" Value="{StaticResource ACTernaryRedBrush}" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="ButtonText" Property="Foreground" Value="{StaticResource ACPrimaryRedBrush}" />
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{StaticResource ACPrimaryRedBrush}" />
                        </Trigger>
                        <Trigger Property="local:ButtonExtensions.ButtonSize" Value="Medium">
                            <Setter Property="FontSize" Value="12" />
                        </Trigger>

                        <Trigger Property="local:ButtonExtensions.ButtonSize" Value="Large">
                            <Setter Property="FontSize" Value="14" />
                        </Trigger>

                        <Trigger Property="local:ButtonExtensions.ButtonSize" Value="Auto">
                            <Setter Property="FontSize" Value="14" />
                        </Trigger>

                        <Trigger Property="local:ButtonExtensions.ButtonSize" Value="Small">
                            <Setter Property="FontSize" Value="8" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ButtonText" Property="Foreground" Value="{StaticResource ACPrimaryRedLightBrush5}" />
                            <Setter TargetName="Icon" Property="Fill" Value="{StaticResource ACGrayBrush4}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadioButtonTextStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="50" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border
                        x:Name="ButtonBorder"
                        Padding="10"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        Background="{StaticResource ACGrayBrush6}"
                        BorderBrush="{StaticResource ACGrayBrush3}"
                        BorderThickness="2,0,0,0">
                        <TextBlock
                            x:Name="ButtonText"
                            Margin="5,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            FontSize="14"
                            Foreground="{StaticResource ACPrimaryGraphiteBrush}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource ACGrayBrush5}" />
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{StaticResource ACPrimaryRedBrush}" />
                            <Setter TargetName="ButtonText" Property="Foreground" Value="#000000" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource ACGrayBrush5}" />
                            <Setter TargetName="ButtonText" Property="Foreground" Value="#000000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderMenuButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="ExpanderButtonBorder"
                        Background="{StaticResource ACGrayBrush6}"
                        BorderBrush="Transparent"
                        BorderThickness="0">
                        <Grid Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="17" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border
                                x:Name="SelectedMenuButtonBorder"
                                Grid.Row="0"
                                Grid.Column="0"
                                Height="40"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0" />
                            <Path
                                x:Name="Icon"
                                Grid.Row="0"
                                Grid.Column="1"
                                Width="16"
                                Height="16"
                                Margin="5,5,5,5"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                                Fill="{StaticResource ACPrimaryGrayBrush}"
                                Stretch="Uniform" />
                            <TextBlock
                                x:Name="ContentBlock"
                                Grid.Row="0"
                                Grid.Column="2"
                                Margin="5,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                FontSize="14"
                                Foreground="{StaticResource ACPrimaryGraphiteBrush}"
                                Text="{Binding Path=(local:ButtonExtensions.ButtonText), RelativeSource={RelativeSource TemplatedParent}}" />
                            <ToggleButton
                                x:Name="ExpanderToggle"
                                Grid.Row="0"
                                Grid.Column="3"
                                Width="12"
                                Height="12"
                                Margin="0,0,5,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Cursor="Hand">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Grid Background="Transparent">
                                                        <Path
                                                            x:Name="ExpanderPath"
                                                            Width="12"
                                                            Height="12"
                                                            Data="{Binding Source={StaticResource ACDownArrow}}"
                                                            Fill="{StaticResource ACSystemDangerBrush}"
                                                            Stretch="Uniform" />
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter TargetName="ExpanderPath" Property="Data" Value="{Binding Source={StaticResource ACUpArrow}}" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <ContentControl
                                x:Name="Container"
                                Grid.Row="1"
                                Grid.Column="2"
                                Grid.ColumnSpan="2"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                Content="{Binding Path=(local:WindowExtensions.SideBarItems), RelativeSource={RelativeSource TemplatedParent}}"
                                Visibility="{Binding ElementName=ExpanderToggle, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Container" Property="HasContent" Value="True">
                            <Setter TargetName="ExpanderToggle" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger SourceName="Container" Property="HasContent" Value="False">
                            <Setter TargetName="ExpanderToggle" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="SelectedMenuButtonBorder" Property="Background" Value="{StaticResource ACSystemDangerBrush}" />
                            <Setter TargetName="ExpanderButtonBorder" Property="Background" Value="White" />
                            <Setter TargetName="Icon" Property="Fill" Value="{StaticResource ACSystemDangerBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="MenuRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border
                        x:Name="MainBorder"
                        Width="{Binding Path=Width, RelativeSource={RelativeSource TemplatedParent}}"
                        Height="{Binding Path=Height, RelativeSource={RelativeSource TemplatedParent}}"
                        Background="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Ellipse
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Width="7.5"
                                Height="7.5"
                                Margin="16,-15,0,0"
                                Panel.ZIndex="10"
                                Fill="{StaticResource ACSystemSuccessBrush}"
                                Visibility="{Binding Path=(local:ButtonExtensions.HasUpdate), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <Border
                                x:Name="SelectedMenuButtonBorder"
                                Grid.Column="0"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0" />
                            <Path
                                x:Name="Icon"
                                Grid.Column="1"
                                Width="16"
                                Height="16"
                                Margin="7.5,5,5,5"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                                Stretch="Uniform" />
                            <!--  Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"  -->
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="SelectedMenuButtonBorder" Property="Background" Value="{StaticResource ACSystemDangerBrush}" />
                            <Setter TargetName="Icon" Property="Fill" Value="{StaticResource ACSystemDangerBrush}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="White" />
                            <Setter TargetName="SelectedMenuButtonBorder" Property="Background" Value="{StaticResource ACSystemDangerBrush}" />
                            <Setter TargetName="Icon" Property="Fill" Value="{StaticResource ACSystemDangerBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="SelectedMenuButtonBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="Icon" Property="Fill" Value="{StaticResource ACPrimaryGrayBrush}" />
                            <Setter TargetName="MainBorder" Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="MenuButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Width" Value="38" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Width="{Binding Path=Width, RelativeSource={RelativeSource TemplatedParent}}"
                        Height="{Binding Path=Height, RelativeSource={RelativeSource TemplatedParent}}"
                        Padding="5"
                        Background="Transparent">
                        <Path
                            Width="16"
                            Height="16"
                            Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                            Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                            Stretch="Uniform" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ProfileButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="Transparent">
                        <Ellipse
                            Width="24"
                            Height="24"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Fill="White" />

                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="16"
                            FontWeight="SemiBold"
                            Foreground="#FFC3002F"
                            Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                            TextAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Background="White">
                        <Path
                            Margin="5"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                            Fill="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
                            Stretch="Uniform" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CaptionButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid
                        x:Name="LayoutRoot"
                        Width="44"
                        Height="30"
                        Background="Transparent">
                        <TextBlock
                            x:Name="txt"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontFamily="Segoe MDL2 Assets"
                            FontSize="10"
                            Foreground="White"
                            RenderOptions.ClearTypeHint="Auto"
                            Text="{TemplateBinding Content}"
                            TextOptions.TextFormattingMode="Display"
                            TextOptions.TextRenderingMode="Aliased" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="#E5E5E5" />
                            <Setter TargetName="txt" Property="Foreground" Value="#000000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="MinimizeButtonStyle"
        BasedOn="{StaticResource CaptionButtonStyle}"
        TargetType="Button">
        <Setter Property="Content" Value="&#xE949;" />
    </Style>

    <Style
        x:Key="MaximizeButtonStyle"
        BasedOn="{StaticResource CaptionButtonStyle}"
        TargetType="Button">
        <Setter Property="Content" Value="&#xE739;" />
    </Style>

    <Style
        x:Key="RestoreButtonStyle"
        BasedOn="{StaticResource CaptionButtonStyle}"
        TargetType="Button">
        <Setter Property="Content" Value="&#xE923;" />
    </Style>

    <Style
        x:Key="CloseButtonStyle"
        BasedOn="{StaticResource CaptionButtonStyle}"
        TargetType="Button">
        <Setter Property="Content" Value="&#xE106;" />
    </Style>

    <ControlTemplate x:Key="IconButtonTemplate" TargetType="{x:Type Button}">
        <Grid Background="Transparent">
            <Path
                Width="{Binding Path=Width, RelativeSource={RelativeSource TemplatedParent}}"
                Height="{Binding Path=Height, RelativeSource={RelativeSource TemplatedParent}}"
                Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                Stretch="Uniform" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="TextIconButtonTemplate" TargetType="{x:Type Button}">
        <Border
            x:Name="ButtonBorder"
            Padding="4,4,4,4"
            Background="Transparent"
            BorderBrush="{StaticResource ACPrimaryRedBrush}"
            BorderThickness="1">
            <Grid
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="LeftColumn" Width="*" />
                    <ColumnDefinition x:Name="RightColumn" Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    x:Name="Content"
                    Grid.Column="0"
                    Grid.ColumnSpan="1"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource ACPrimaryGraphiteBrush}"
                    Text="{Binding Path=(local:ButtonExtensions.ButtonText), RelativeSource={RelativeSource TemplatedParent}}">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Visible" />
                            <Setter Property="Margin" Value="0,0,5,0" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=(local:ButtonExtensions.ButtonText), RelativeSource={RelativeSource TemplatedParent}}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Setter Property="Margin" Value="0,0,0,0" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=(local:ButtonExtensions.ButtonText), RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Setter Property="Margin" Value="0,0,0,0" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <Path
                    x:Name="Icon"
                    Grid.Column="1"
                    Grid.ColumnSpan="1"
                    Width="15"
                    Height="15"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                    Fill="{StaticResource ACPrimaryGraphiteBrush}"
                    Stretch="Uniform" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="local:ButtonExtensions.Icon" Value="{x:Null}">
                <Setter TargetName="Content" Property="Margin" Value="0" />
                <Setter TargetName="Content" Property="Grid.Column" Value="0" />
                <Setter TargetName="Content" Property="Grid.ColumnSpan" Value="2" />
            </Trigger>

            <Trigger Property="local:ButtonExtensions.Icon" Value="">
                <Setter TargetName="Content" Property="Margin" Value="0" />
                <Setter TargetName="Content" Property="Grid.Column" Value="0" />
                <Setter TargetName="Content" Property="Grid.ColumnSpan" Value="2" />
            </Trigger>

            <Trigger Property="local:ButtonExtensions.ButtonText" Value="{x:Null}">
                <Setter TargetName="Content" Property="Margin" Value="0" />
                <Setter TargetName="Icon" Property="Grid.Column" Value="0" />
                <Setter TargetName="Icon" Property="Grid.ColumnSpan" Value="2" />
            </Trigger>

            <Trigger Property="local:ButtonExtensions.ButtonText" Value="">
                <Setter TargetName="Content" Property="Margin" Value="0" />
                <Setter TargetName="Icon" Property="Grid.Column" Value="0" />
                <Setter TargetName="Icon" Property="Grid.ColumnSpan" Value="2" />
            </Trigger>

            <Trigger Property="local:ButtonExtensions.IconPosition" Value="Right">
                <Setter TargetName="Icon" Property="Grid.Column" Value="1" />
                <Setter TargetName="Content" Property="Grid.Column" Value="0" />
                <Setter TargetName="LeftColumn" Property="Width" Value="*" />
                <Setter TargetName="RightColumn" Property="Width" Value="Auto" />
                <Setter TargetName="Content" Property="Margin" Value="0,0,8,0" />
            </Trigger>

            <Trigger Property="local:ButtonExtensions.IconPosition" Value="Left">
                <Setter TargetName="Icon" Property="Grid.Column" Value="0" />
                <Setter TargetName="Content" Property="Grid.Column" Value="1" />
                <Setter TargetName="LeftColumn" Property="Width" Value="Auto" />
                <Setter TargetName="RightColumn" Property="Width" Value="*" />
                <Setter TargetName="Content" Property="Margin" Value="8,0,0,0" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Icon" Property="Fill" Value="White" />
                <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource ACPrimaryRedBrush}" />
                <Setter TargetName="Content" Property="Foreground" Value="White" />
            </Trigger>

            <Trigger Property="local:ButtonExtensions.ButtonType" Value="Primary">
                <Setter TargetName="Icon" Property="Fill" Value="White" />
                <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource ACPrimaryRedBrush}" />
                <Setter TargetName="Content" Property="Foreground" Value="White" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="local:ButtonExtensions.ButtonType" Value="Primary" />
                </MultiTrigger.Conditions>
                <Setter TargetName="ButtonBorder" Property="Background" Value="#A60028" />
            </MultiTrigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="ButtonBorder" Property="Background" Value="#F3416C" />
                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="#F3416C" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="CheckBoxTemplate" TargetType="{x:Type CheckBox}">
        <StackPanel
            x:Name="CheckBoxPanel"
            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
            VerticalAlignment="{TemplateBinding VerticalAlignment}"
            Background="Transparent"
            Orientation="Horizontal">
            <Border
                x:Name="CheckBoxBorder"
                Width="24"
                Height="24"
                Padding="1"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Background="{TemplateBinding local:ButtonExtensions.CheckBoxBackground}"
                BorderBrush="#D2D2D2"
                BorderThickness="1">
                <Path
                    x:Name="TickMark"
                    Width="15"
                    Height="15"
                    Margin="2,0,0,0"
                    Data="{Binding Source={StaticResource ACTick}}"
                    Fill="Black"
                    Stretch="Uniform"
                    Visibility="Visible" />
            </Border>
            <TextBlock
                x:Name="CheckBoxContent"
                Margin="5,0,0,0"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize}"
                FontWeight="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontWeight}"
                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}" />
            <Path
                x:Name="Icon"
                Width="24"
                Height="24"
                Margin="4,0,0,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:ButtonExtensions.Icon)}"
                Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:ButtonExtensions.IconColor)}"
                Stretch="Uniform">
                <Path.Style>
                    <Style TargetType="{x:Type Path}">
                        <Setter Property="Fill" Value="{StaticResource ACGrayBrush6}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:ButtonExtensions.Icon)}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:ButtonExtensions.Icon)}" Value="">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Path.Style>
            </Path>
        </StackPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="TickMark" Property="Visibility" Value="Visible" />
                <Setter TargetName="TickMark" Property="Fill" Value="#C3002F" />
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter TargetName="TickMark" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="CheckBoxBorder" Property="Background" Value="#F7F7F7" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="CheckBoxBorder" Property="Background" Value="Transparent" />
                <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="#B9B9B9" />
                <Setter TargetName="CheckBoxContent" Property="Foreground" Value="#B9B9B9" />
            </Trigger>
            <Trigger Property="local:ButtonExtensions.ButtonSize" Value="Large">
                <Setter TargetName="CheckBoxBorder" Property="Height" Value="24" />
                <Setter TargetName="CheckBoxBorder" Property="Width" Value="24" />
                <Setter TargetName="Icon" Property="Height" Value="24" />
                <Setter TargetName="Icon" Property="Width" Value="24" />
                <Setter Property="FontSize" Value="16" />
            </Trigger>
            <Trigger Property="local:ButtonExtensions.ButtonSize" Value="Medium">
                <Setter TargetName="CheckBoxBorder" Property="Height" Value="21" />
                <Setter TargetName="CheckBoxBorder" Property="Width" Value="21" />
                <Setter TargetName="TickMark" Property="Width" Value="14" />
                <Setter TargetName="TickMark" Property="Height" Value="14" />
                <Setter TargetName="Icon" Property="Height" Value="21" />
                <Setter TargetName="Icon" Property="Width" Value="21" />
                <Setter TargetName="TickMark" Property="Margin" Value="0,0,0,0" />
                <Setter Property="FontSize" Value="14" />
            </Trigger>
            <Trigger Property="local:ButtonExtensions.ButtonSize" Value="Small">
                <Setter TargetName="CheckBoxBorder" Property="Height" Value="16" />
                <Setter TargetName="CheckBoxBorder" Property="Width" Value="16" />
                <Setter TargetName="Icon" Property="Height" Value="16" />
                <Setter TargetName="Icon" Property="Width" Value="16" />
                <Setter TargetName="TickMark" Property="Width" Value="10" />
                <Setter TargetName="TickMark" Property="Height" Value="10" />
                <Setter TargetName="TickMark" Property="Margin" Value="0,0,0,0" />
                <Setter Property="FontSize" Value="12" />
            </Trigger>
            <Trigger Property="local:ButtonExtensions.ButtonSize" Value="Auto">
                <Setter TargetName="CheckBoxBorder" Property="Height" Value="24" />
                <Setter TargetName="CheckBoxBorder" Property="Width" Value="24" />
                <Setter TargetName="Icon" Property="Height" Value="24" />
                <Setter TargetName="Icon" Property="Width" Value="24" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="RadioButtonTemplate" TargetType="{x:Type RadioButton}">
        <StackPanel Orientation="Horizontal">
            <Grid x:Name="RadioGrid">
                <Ellipse
                    x:Name="ParentRadio"
                    Width="24"
                    Height="24"
                    Fill="Transparent"
                    Stroke="#D2D2D2"
                    StrokeThickness="2" />
                <Ellipse
                    x:Name="ChildRadio"
                    Width="5"
                    Height="5"
                    Fill="Transparent"
                    Stroke="Transparent"
                    StrokeThickness="0" />
            </Grid>
            <TextBlock
                x:Name="RadioContent"
                Margin="5,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize}"
                FontWeight="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontWeight}"
                Foreground="#151515"
                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}" />
            <Path
                x:Name="Icon"
                Width="24"
                Height="24"
                Margin="4,0,0,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:ButtonExtensions.Icon)}"
                Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:ButtonExtensions.IconColor)}"
                Stretch="Uniform">
                <Path.Style>
                    <Style TargetType="{x:Type Path}">
                        <Setter Property="Fill" Value="{StaticResource ACGrayBrush6}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:ButtonExtensions.Icon)}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:ButtonExtensions.Icon)}" Value="">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Path.Style>
            </Path>
        </StackPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="ParentRadio" Property="Fill" Value="#C3002F" />
                <Setter TargetName="ChildRadio" Property="Fill" Value="White" />
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter TargetName="ParentRadio" Property="Fill" Value="Transparent" />
                <Setter TargetName="ChildRadio" Property="Fill" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="RadioGrid" Property="Background" Value="#F7F7F7" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="ParentRadio" Property="Stroke" Value="#B9B9B9" />
                <Setter TargetName="ChildRadio" Property="Fill" Value="Transparent" />
                <Setter TargetName="RadioContent" Property="Foreground" Value="#B9B9B9" />
            </Trigger>

            <Trigger Property="local:ButtonExtensions.ButtonSize" Value="Large">
                <Setter TargetName="ParentRadio" Property="Height" Value="24" />
                <Setter TargetName="ParentRadio" Property="Width" Value="24" />
                <Setter TargetName="Icon" Property="Height" Value="24" />
                <Setter TargetName="Icon" Property="Width" Value="24" />
                <Setter Property="FontSize" Value="16" />
            </Trigger>
            <Trigger Property="local:ButtonExtensions.ButtonSize" Value="Medium">
                <Setter TargetName="ParentRadio" Property="Height" Value="21" />
                <Setter TargetName="ParentRadio" Property="Width" Value="21" />
                <Setter TargetName="Icon" Property="Height" Value="21" />
                <Setter TargetName="Icon" Property="Width" Value="21" />
                <Setter TargetName="ChildRadio" Property="Width" Value="4" />
                <Setter TargetName="ChildRadio" Property="Height" Value="4" />
                <Setter Property="FontSize" Value="14" />
            </Trigger>
            <Trigger Property="local:ButtonExtensions.ButtonSize" Value="Small">
                <Setter TargetName="ParentRadio" Property="Height" Value="16" />
                <Setter TargetName="ParentRadio" Property="Width" Value="16" />
                <Setter TargetName="Icon" Property="Height" Value="16" />
                <Setter TargetName="Icon" Property="Width" Value="16" />
                <Setter TargetName="ChildRadio" Property="Width" Value="3" />
                <Setter TargetName="ChildRadio" Property="Height" Value="3" />
                <Setter Property="FontSize" Value="12" />
            </Trigger>
            <Trigger Property="local:ButtonExtensions.ButtonSize" Value="Auto">
                <Setter TargetName="ParentRadio" Property="Height" Value="24" />
                <Setter TargetName="ParentRadio" Property="Width" Value="24" />
                <Setter TargetName="Icon" Property="Height" Value="24" />
                <Setter TargetName="Icon" Property="Width" Value="24" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="PrimaryButtonTemplate" TargetType="{x:Type Button}">
        <Border
            x:Name="ButtonBorder"
            Width="{Binding Path=Width, RelativeSource={RelativeSource TemplatedParent}}"
            Height="{Binding Path=Height, RelativeSource={RelativeSource TemplatedParent}}"
            Padding="{Binding Path=Padding, RelativeSource={RelativeSource TemplatedParent}}"
            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
            VerticalAlignment="{TemplateBinding VerticalAlignment}"
            Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
            BorderBrush="{StaticResource ACPrimaryRedBrush}"
            BorderThickness="1,1,1,1">
            <TextBlock
                HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                FontSize="{Binding Path=FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                FontWeight="{Binding Path=FontWeight, RelativeSource={RelativeSource TemplatedParent}}"
                Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                TextBlock.TextAlignment="Center" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ButtonBorder" Property="Background" Value="#A60028" />
                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="#A60028" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter TargetName="ButtonBorder" Property="Background" Value="#C3002F" />
                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="#C3002F" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="ButtonBorder" Property="Background" Value="#F3416C" />
                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="#F3416C" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="ButtonBorder" Property="Background" Value="#FCDCE4" />
                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="#FCDCE4" />
            </Trigger>
            <!--<Trigger Property="IsPressed" Value="False">
                <Setter TargetName="ButtonBorder" Property="Background" Value="#FCDCE4" />
            </Trigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SecondaryButtonTemplate" TargetType="{x:Type Button}">
        <Border
            x:Name="ButtonBorder"
            Width="{Binding Path=Width, RelativeSource={RelativeSource TemplatedParent}}"
            Height="{Binding Path=Height, RelativeSource={RelativeSource TemplatedParent}}"
            Padding="{Binding Path=Padding, RelativeSource={RelativeSource TemplatedParent}}"
            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
            VerticalAlignment="{TemplateBinding VerticalAlignment}"
            Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
            BorderBrush="{StaticResource ACPrimaryRedBrush}"
            BorderThickness="1,1,1,1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    x:Name="ButtonText"
                    HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                    VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                    FontSize="{Binding Path=FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                    FontWeight="{Binding Path=FontWeight, RelativeSource={RelativeSource TemplatedParent}}"
                    Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                    Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                    TextBlock.TextAlignment="Center" />
                <Grid
                    x:Name="AccGrid"
                    Grid.Column="1"
                    Margin="0,-10,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Visibility="{TemplateBinding local:ButtonExtensions.CountVisibility,
                                                 Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Ellipse
                        x:Name="AccEllipse"
                        Width="16"
                        Height="16"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Fill="{StaticResource ACPrimaryRedBrush}" />
                    <TextBlock
                        x:Name="AccCount"
                        Margin="0,1,0,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="10"
                        Foreground="White"
                        LineHeight="12"
                        Text="{Binding Path=(local:ButtonExtensions.Count), RelativeSource={RelativeSource TemplatedParent}}" />
                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ButtonBorder" Property="Background" Value="#A60028" />
                <Setter TargetName="ButtonText" Property="Foreground" Value="White" />
                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="#C3002F" />
                <Setter TargetName="AccEllipse" Property="Fill" Value="White" />
                <Setter TargetName="AccCount" Property="Foreground" Value="{StaticResource ACPrimaryGraphiteBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter TargetName="ButtonText" Property="Foreground" Value="{StaticResource ACPrimaryGraphiteBrush}" />
                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="#C3002F" />
                <Setter TargetName="ButtonBorder" Property="Background" Value="White" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="ButtonBorder" Property="Background" Value="#F3416C" />
                <Setter TargetName="ButtonText" Property="Foreground" Value="White" />
                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="#F3416C" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="ButtonBorder" Property="Background" Value="Transparent" />
                <Setter TargetName="ButtonText" Property="Foreground" Value="#B9B9B9" />
                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="#F3416C" />
                <Setter TargetName="AccEllipse" Property="Fill" Value="#F3416C" />
                <Setter TargetName="AccCount" Property="Foreground" Value="#B9B9B9" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="IconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template" Value="{StaticResource IconButtonTemplate}" />
    </Style>

    <Style
        x:Key="TextIconButtonStyle"
        BasedOn="{StaticResource {x:Type Button}}"
        TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template" Value="{StaticResource TextIconButtonTemplate}" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="local:ButtonExtensions.ButtonType" Value="Auto" />
        <Setter Property="local:ButtonExtensions.ButtonSize" Value="Auto" />
        <Setter Property="local:ButtonExtensions.IconPosition" Value="Right" />

        <Style.Triggers>
            <Trigger Property="local:ButtonExtensions.ButtonType" Value="Primary">
                <Setter Property="Template" Value="{StaticResource TextIconButtonTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="local:ButtonExtensions.ButtonType" Value="Primary" />
        <Setter Property="local:ButtonExtensions.ButtonSize" Value="Large" />
        <Style.Triggers>
            <Trigger Property="local:ButtonExtensions.ButtonType" Value="Primary">
                <Setter Property="Template" Value="{StaticResource PrimaryButtonTemplate}" />
            </Trigger>
            <Trigger Property="local:ButtonExtensions.ButtonType" Value="Secondary">
                <Setter Property="Template" Value="{StaticResource SecondaryButtonTemplate}" />
                <Setter Property="Background" Value="White" />
            </Trigger>
            <Trigger Property="local:ButtonExtensions.ButtonType" Value="Auto">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Background" Value="White" />
            </Trigger>
            <Trigger Property="local:ButtonExtensions.ButtonSize" Value="Large">
                <Setter Property="Height" Value="48" />
                <Setter Property="Padding" Value="40,14,40,14" />
                <Setter Property="FontSize" Value="16" />
            </Trigger>
            <Trigger Property="local:ButtonExtensions.ButtonSize" Value="Medium">
                <Setter Property="Height" Value="42" />
                <Setter Property="Padding" Value="34,12,34,12" />
                <Setter Property="FontSize" Value="14" />
            </Trigger>
            <Trigger Property="local:ButtonExtensions.ButtonSize" Value="Small">
                <Setter Property="Height" Value="32" />
                <Setter Property="Padding" Value="18,8,18,8" />
                <Setter Property="FontSize" Value="12" />
            </Trigger>
            <Trigger Property="local:ButtonExtensions.ButtonType" Value="OK">
                <Setter Property="Template" Value="{StaticResource PrimaryButtonTemplate}" />
                <Setter Property="Height" Value="42" />
                <Setter Property="Padding" Value="64,12,64,12" />
                <Setter Property="FontSize" Value="14" />
            </Trigger>
            <Trigger Property="local:ButtonExtensions.ButtonType" Value="Auto">
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="FontSize" Value="12" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Template" Value="{StaticResource CheckBoxTemplate}" />
        <Setter Property="local:ButtonExtensions.ButtonSize" Value="Large" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="Template" Value="{StaticResource RadioButtonTemplate}" />
        <Setter Property="local:ButtonExtensions.ButtonSize" Value="Large" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

</ResourceDictionary>